@startuml

class User {
+userId: uuid
+username: String
+email: String
+User()
+User(username: String, email: String)
+getUserId(): String
}

interface UserRepository {
+save(user: User): User
+findById(userId: String): User
+delete(user: User): void
}
class UserService {
-userRepository: UserRepository
// UserService constructor
+UserService(userRepository: UserRepository)
+createUser(createUserRequest: CreateUserRequest): User
}

class UserController {
-userService: UserService
+UserController(userService: UserService)
+createUser(createUserRequest: CreateUserRequest): ResponseEntity<User>
}

class Task {
+taskId : String
+taskName : String
+taskDescription : String
+taskStatus : String
}

class TaskList {
+userId: String
+taskListName: String
-user: User
getUserId(): String
}

interface UserRepository {
+save(user: User): User
+findById(userId: String): User
+delete(user: User): void
}

interface TaskRepository {
+save(task: Task ): Task
+findById (taskId: String)
+deleteById(taskId : String): void
}

class TaskService {
-taskRepository : TaskRepository
+getAllTasks(): List<Task>
+getTaskById(taskId : String): Task
+createTask(task: Task): Task
+updateTask(taskId : String, updateTask: Task) : Task
+deleteTask(taskId: String):void
}
@enduml

}
